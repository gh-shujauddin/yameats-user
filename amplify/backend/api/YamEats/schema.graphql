enum TransportationModes {
  DRIVING
  BICYCLING
}

enum OrderStatus {
  NEW
  COOKING
  READY_FOR_PICKUP
  ACCEPTED
  PICKED_UP
  COMPLETED
}

type Courier @model @auth(rules: [{allow: public}]) {
  id: ID!
  Orders: [Order] @hasMany(indexName: "byCourier", fields: ["id"])
  name: String!
  sub: String!
  lat: Float
  lng: Float
  transportationMode: TransportationModes!
}

type OrderDish @model @auth(rules: [{allow: public}]) {
  id: ID!
  dishID: ID! @index(name: "byDish")
  quantity: Int!
  orderID: ID! @index(name: "byOrder")
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  restaurantID: ID! @index(name: "byRestaurant")
  userID: ID! @index(name: "byUser")
  status: OrderStatus
  courierID: ID @index(name: "byCourier")
  OrderDishes: [OrderDish] @hasMany(indexName: "byOrder", fields: ["id"])
  total: Float
}

type BasketDish @model @auth(rules: [{allow: public}]) {
  id: ID!
  dishID: ID! @index(name: "byDish")
  basketID: ID! @index(name: "byBasket")
  quantity: Int!
}

type Basket @model @auth(rules: [{allow: public}]) {
  id: ID!
  restaurantID: ID! @index(name: "byRestaurant")
  userID: ID! @index(name: "byUser")
  BasketDishes: [BasketDish] @hasMany(indexName: "byBasket", fields: ["id"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  sub: String!
  name: String!
  address: String!
  lat: Float!
  lng: Float!
  Baskets: [Basket] @hasMany(indexName: "byUser", fields: ["id"])
  Orders: [Order] @hasMany(indexName: "byUser", fields: ["id"])
}

type Dish @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String
  description: String
  price: Float
  restaurantID: ID! @index(name: "byRestaurant")
  BasketDishes: [BasketDish] @hasMany(indexName: "byDish", fields: ["id"])
  OrderDishes: [OrderDish] @hasMany(indexName: "byDish", fields: ["id"])
}

type Restaurant @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String!
  deliveryFee: Float!
  minDeliveryTime: Int!
  maxDeliveryTime: Int!
  rating: Float
  address: String!
  lat: Float!
  lng: Float!
  Dishes: [Dish] @hasMany(indexName: "byRestaurant", fields: ["id"])
  Baskets: [Basket] @hasMany(indexName: "byRestaurant", fields: ["id"])
  Orders: [Order] @hasMany(indexName: "byRestaurant", fields: ["id"])
  adminSub: String!
}